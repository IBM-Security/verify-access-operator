##############################################################################
# Copyright contributors to the IBM Security Verify Access Operator project

# This workflow will be triggered whenever a push occurs on specific
# branches (e.g. when a pull request is merged).  The action will build and
# publish the verify access operator.  The docker images will be
# published to docker hub for 'master' builds, and a private
# artifactory repository for 'development' builds.

name: verify-access-operator-publish

# Controls when the workflow will run
on:
  push:
    branches:
      - master
      - development
      - build-environment

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# The jobs for the workflow.
jobs:

  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the 
    # job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can 
      # access it
      - name: Checkout
        uses: actions/checkout@v2

      # Set up the GO environment.
      - name: Setup go
        uses: actions/setup-go@v2
        with:
          go-version: "1.15"

      # Set up the GO cache.
      - name: Use go cache
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      # Download and install the operator-sdk.  These instructions have
      # been copied from the official GO installation guide.
      - name: Set up OperatorSDK
        id: fetch-operator-sdk
        run: |
          # Download the operator-sdk.
          export ARCH=amd64
          export OS=$(uname | awk '{print tolower($0)}')
          export OPERATOR_SDK_DL_URL=https://github.com/operator-framework/operator-sdk/releases/download/v1.7.2

          curl -LO ${OPERATOR_SDK_DL_URL}/operator-sdk_${OS}_${ARCH}

          # Verify that the operator has been downloaded OK.
          gpg --keyserver keyserver.ubuntu.com --recv-keys 052996E2A20B5C7E

          curl -LO ${OPERATOR_SDK_DL_URL}/checksums.txt
          curl -LO ${OPERATOR_SDK_DL_URL}/checksums.txt.asc
          gpg -u "Operator SDK (release) <cncf-operator-sdk@cncf.io>" \
              --verify checksums.txt.asc

          grep operator-sdk_${OS}_${ARCH} checksums.txt | sha256sum -c -

          # Install the operator-sdk.
          chmod +x operator-sdk_${OS}_${ARCH} 
          mkdir -p ${HOME}/.local/bin
          mv operator-sdk_${OS}_${ARCH} ${HOME}/.local/bin/operator-sdk

      # Perform a docker login.
      - name: Login to Container Registry
        uses: docker/login-action@v1
        with:
          registry: sec-isam-docker-local.artifactory.swg-devops.com
          username: isamdev@au1.ibm.com
          password: ${{ secrets.ARTIFACTORY_API_KEY }}

      # Perform the build.
      - name: Perform the build.
        run: |
          cd src

          if [ "`basename $GITHUB_REF`" = "master" ] ; then
            export IMAGE_TAG_BASE=ibmcom/verify-access-operator
          else
            export IMAGE_TAG_BASE=sec-isam-docker-local.artifactory.swg-devops.com/verify-access-operator
          fi

          # Work out the version.  The operator bundle has some pretty severe
          # restrictions on the version number.
          export VERSION=`date +%y.%m.0 | sed "s|\.0\([0-9]\)|.\1|g"`

          echo "make build....."
          make build

          echo "make docker-build....."
          make docker-build

          echo "make bundle....."
          make bundle

          echo "make bundle-build....."
          make bundle-build

